{"version":3,"sources":["components/Header.js","components/Code.js","components/Result.js","components/DeleteButton.js","utilities/random-shadow.js","components/AddButton.js","components/SizeInput.js","components/ColorPicker.js","components/Control.js","components/DirectionButton.js","components/DirectionGroup.js","components/ControlList.js","components/Footer.js","utilities/build-string.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Code","result","useState","isCopied","setIsCopied","onClick","e","preventDefault","navigator","clipboard","writeText","setTimeout","handleCopy","DisplayText","isEditing","setEditing","sampleText","setSampleText","testShadowStyle","onBlur","type","name","placeholder","value","onChange","target","autoFocus","style","DeleteButton","controls","setControls","index","aria-label","updatedControls","splice","handleClick","disabled","length","randomSize","min","max","Math","ceil","random","AddButton","newShadow","id","floor","Date","now","size","color","SizeInput","dataset","decrementSize","data-index","handleChange","autoComplete","incrementSize","ColorPicker","isOpen","setIsOpen","backgroundColor","idx","hex","handleColorInput","Control","values","DirectionButton","direction","rest","DirectionGroup","setDirection","ControlList","TransitionGroup","component","map","CSSTransition","timeout","enter","exit","classNames","Footer","cssString","buildString","arrayOfControls","directionString","resultArray","sizeTracker","forEach","control","i","push","resultString","join","substring","App","setResult","initialShadow","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d13ed9e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>\r\n        <a href='/'>\r\n          Text Shadows v2\r\n        </a>\r\n      </h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport { FaCopy } from 'react-icons/fa'\r\nimport './Code.css'\r\n\r\nconst Code = ({ result }) => {\r\n  const [isCopied, setIsCopied] = useState(false)\r\n\r\n  const handleCopy = e => {\r\n    e.preventDefault()\r\n    navigator.clipboard.writeText(`text-shadow: ${result};`)\r\n    setIsCopied(true)\r\n    setTimeout(() => {\r\n      setIsCopied(false)\r\n    }, 3000);\r\n  }\r\n  \r\n  return (\r\n    <div\r\n      className=\"Code_Container\"      \r\n    >\r\n      <code>\r\n        <span>text-shadow:</span> {result};\r\n      </code>\r\n      <button\r\n        onClick={e => handleCopy(e)}\r\n      >\r\n        <FaCopy />\r\n        {\r\n          isCopied ? \"Copied!\" : \"Copy CSS\"\r\n        }\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Code","import React, { useState } from 'react'\r\nimport Code from './Code'\r\nimport './Result.css'\r\n\r\nconst DisplayText = ({ result }) => {\r\n  const [isEditing, setEditing] = useState(false)\r\n  const [sampleText, setSampleText] = useState('Edit This Text')\r\n  const testShadowStyle = {\r\n    \"textShadow\": result\r\n  }\r\n\r\n  return (\r\n    <section className=\"Result\">\r\n      {isEditing ? (\r\n        <div\r\n          onBlur={() => setEditing(false)}\r\n        >\r\n          <input\r\n            className=\"SampleText\"\r\n            type=\"text\"\r\n            name=\"sampleText\"\r\n            placeholder=\"Enter Your Text\"\r\n            value={sampleText}\r\n            onChange={e => setSampleText(e.target.value)}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      ): (\r\n        <div\r\n          onClick={() => setEditing(true)}\r\n        >\r\n          <span\r\n            className=\"SampleText\" \r\n            style={testShadowStyle}\r\n          >\r\n            {sampleText || \"Edit This\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      <Code\r\n        result={result}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DisplayText\r\n","import React from 'react'\r\nimport { FaTrash } from 'react-icons/fa'\r\nimport './DeleteButton.css'\r\n\r\nconst DeleteButton = ({ controls, setControls, index}) => {\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault()\r\n    const updatedControls = [...controls]\r\n    updatedControls.splice(index, 1)\r\n    setControls(updatedControls)\r\n  }\r\n\r\n  return (\r\n    <button\r\n      aria-label=\"Delete Button\"\r\n      className=\"DeleteButton\"\r\n      onClick={e => handleClick(e)}\r\n      disabled={controls.length <= 1}\r\n    >\r\n      <FaTrash />      \r\n    </button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton\r\n","// generate default props when a new shadow control is added\r\nconst randomColor = ()  => {\r\n  const colors = ['#202020', '#3f3f3f', '#707070', '#ffdf6c', '#f7e8e6'];\r\n  return  colors[Math.floor(Math.random() * 5)]\r\n}\r\n\r\nconst randomSize = (min, max) => Math.ceil(Math.random() * (max-min) + min)\r\n\r\nexport {\r\n  randomColor,\r\n  randomSize\r\n}\r\n\r\n","import React from 'react'\r\nimport { MdAddCircleOutline } from 'react-icons/md'\r\nimport { randomSize, randomColor } from '../utilities/random-shadow'\r\nimport './AddButton.css'\r\n\r\nconst AddButton = ({ controls, setControls, index }) => {\r\n  \r\n  const newShadow = {\r\n    id: Math.floor(Math.random() * Date.now()),\r\n    size: randomSize(5, 10),\r\n    color: randomColor()\r\n  }\r\n\r\n  const handleClick = e => {\r\n    e.preventDefault()\r\n    const updatedControls = [...controls]\r\n    updatedControls.splice(index + 1, 0, newShadow)\r\n    setControls(updatedControls)\r\n  }\r\n\r\n  return (\r\n    <button\r\n      aria-label=\"Add Button\"\r\n      className=\"AddButton\"\r\n      onClick={e => handleClick(e)}\r\n    >\r\n      <MdAddCircleOutline />\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddButton\r\n","import React from 'react'\r\nimport './SizeInput.css'\r\n\r\nconst SizeInput = ({ size, controls, setControls, index }) => {\r\n  \r\n  const incrementSize = e => {\r\n    const updatedControls = [...controls]\r\n    updatedControls[e.target.dataset.index].size++\r\n    setControls(updatedControls)\r\n  }\r\n\r\n  const decrementSize = e => {\r\n    const updatedControls = [...controls]\r\n    updatedControls[e.target.dataset.index].size--\r\n    setControls(updatedControls)\r\n  }\r\n\r\n  const handleChange = e => {    \r\n    const updatedControls = [...controls]\r\n    updatedControls[e.target.dataset.index][e.target.name] = e.target.value\r\n    setControls(updatedControls)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`SizeInput_Container`}\r\n    >\r\n      <button\r\n        onClick={e => decrementSize(e)}\r\n        data-index={index}\r\n      >\r\n        &lt;\r\n      </button>\r\n      <input\r\n        className={`SizeInput`}\r\n        aria-label=\"Size Input\"\r\n        type=\"number\"\r\n        name=\"size\"\r\n        value={size}\r\n        min=\"1\"\r\n        data-index={index}\r\n        onChange={e => handleChange(e)}\r\n        autoComplete=\"off\"\r\n      />\r\n      <button\r\n        onClick={e => incrementSize(e)}\r\n        data-index={index}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SizeInput\r\n","import React, { useState } from 'react'\r\nimport { ChromePicker } from 'react-color'\r\nimport './ColorPicker.css'\r\n\r\nconst ColorPicker = ({ color, controls, setControls, index }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const handleColorInput = (color) => {\r\n    const idx = index\r\n    const updatedControls = [...controls]\r\n    updatedControls[idx].color = color.hex\r\n    setControls(updatedControls)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`ColorPicker_Container`}\r\n    >\r\n    <button\r\n      className={`ColorPicker_Button`}\r\n      onClick={() => setIsOpen(!isOpen)}\r\n      style={{backgroundColor: color}}\r\n    >\r\n      <span>{color}</span>\r\n    </button>\r\n    {\r\n      isOpen &&\r\n        <div\r\n          className={`ColorPicker_Modal`}\r\n        >\r\n          <div className={`ColorPicker_Cover`} onClick={() => setIsOpen(false)} />\r\n          <ChromePicker\r\n            name=\"color\"\r\n            color={color}\r\n            onChange={color => handleColorInput(color)}\r\n          />\r\n        </div>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ColorPicker\r\n","import React from 'react'\r\nimport DeleteButton from './DeleteButton'\r\nimport AddButton from './AddButton'\r\nimport SizeInput from './SizeInput'\r\nimport ColorPicker from './ColorPicker'\r\nimport './Control.css'\r\n\r\n\r\nconst Control = ({ values: { size, color }, index, controls, setControls }) => {\r\n  return (\r\n    <li\r\n      className={`Control_Container`}\r\n    >\r\n      <SizeInput \r\n        size={size}\r\n        controls={controls}\r\n        setControls={setControls}\r\n        index={index}\r\n      />\r\n      <ColorPicker\r\n        index={index}\r\n        color={color}\r\n        controls={controls}\r\n        setControls={setControls}\r\n      />\r\n      <DeleteButton\r\n        index={index}\r\n        controls={controls}\r\n        setControls={setControls}\r\n      />\r\n      <AddButton\r\n        index={index}\r\n        controls={controls}\r\n        setControls={setControls}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Control","import React from 'react'\r\nimport './DirectionButton.css'\r\n\r\nconst DirectionButton = ({ value, onChange, direction, ...rest }) => (\r\n  <label\r\n    className={`DirectionButton_Label ${direction === value ? 'DirectionButton_Checked': ''}`}\r\n  >\r\n    <input        \r\n        className=\"DirectionButton_Input\"           \r\n        type=\"radio\" \r\n        name=\"direction\"\r\n        value={value}\r\n        onChange={onChange}\r\n        {...rest}\r\n      />\r\n      <span className={`DirectionButton_PseudoLabel ${value}`}>TS</span>\r\n  </label>\r\n)\r\n\r\nexport default DirectionButton","import React from 'react'\r\nimport DirectionButton from './DirectionButton'\r\nimport './DirectionGroup.css'\r\n\r\nconst DirectionGroup = ({ direction, setDirection }) => {\r\n  const handleChange = e => {\r\n    setDirection(e.target.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"DirectionGroup\"\r\n      aria-label=\"Shadow Direction\"\r\n    >\r\n      <h2>Direction</h2>\r\n      <div>\r\n        <DirectionButton \r\n          aria-label=\"Top\"\r\n          value={\"top\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <DirectionButton \r\n          aria-label=\"Top Right\"\r\n          value={\"topRight\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <DirectionButton \r\n          aria-label=\"Right\"\r\n          value={\"right\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />      \r\n        <DirectionButton \r\n          aria-label=\"Bottom Right\"\r\n          value={\"bottomRight\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <DirectionButton \r\n          aria-label=\"Bottom\"\r\n          value={\"bottom\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <DirectionButton \r\n          aria-label=\"Bottom Left\"\r\n          value={\"bottomLeft\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n        <DirectionButton \r\n          aria-label=\"Left\"\r\n          value={\"left\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />            \r\n        <DirectionButton \r\n          aria-label=\"Top Left\"\r\n          value={\"topLeft\"}\r\n          direction={direction}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DirectionGroup","import React from 'react'\r\nimport Control from './Control'\r\nimport DirectionGroup from './DirectionGroup'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport './ControlList.css'\r\n\r\nconst ControlList = ({ controls, setControls, direction, setDirection }) => {\r\n\r\n  return (\r\n    <section className=\"ControlGroup\">\r\n      <DirectionGroup\r\n        direction={direction}\r\n        setDirection={setDirection}\r\n      />\r\n      <header>\r\n        <h2>Controls</h2>\r\n      </header>\r\n      <TransitionGroup component='ul'>\r\n        {controls.map((values, index) => (\r\n          <CSSTransition\r\n            key={values.id}\r\n            timeout={{\r\n              enter: 500,\r\n              exit: 300,\r\n            }}\r\n            classNames=\"cg\"\r\n          >\r\n            <Control\r\n              values={values}\r\n              index={index}\r\n              controls={controls}\r\n              setControls={setControls}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ControlList\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"Footer_Container\">\r\n      \t<p>&copy; 2021 <a href=\"https://github.com/jnicewander\">Justin Nicewander</a>, All Rights Reserved.</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","function buildString(arrayOfControls, directionString) {\r\n  let resultArray = [];\r\n  let sizeTracker = 0;\r\n\r\n  arrayOfControls.forEach(control=> {\r\n    for (let i = 0; i < control.size; i++) {      \r\n      resultArray.push(cssString(directionString, sizeTracker + 1, control.color))\r\n      sizeTracker++;\r\n    }\r\n  })\r\n\r\n  const resultString = resultArray.join('');\r\n  const formatResult = resultString.substring(0, resultString.length - 2)\r\n  return formatResult;\r\n}\r\n\r\nfunction cssString(direction, size, color) {\r\n  switch (direction) {\r\n    case \"top\":\r\n      return `0px -${size}px ${color}, `\r\n    case \"topRight\":      \r\n      return `${size}px -${size}px ${color}, `\r\n    case \"right\":\r\n      return `${size}px 0px ${color}, `\r\n    case \"bottomRight\":\r\n      return `${size}px ${size}px ${color}, `\r\n    case \"bottom\":\r\n      return `0px ${size}px ${color}, `\r\n    case \"bottomLeft\":\r\n      return `-${size}px ${size}px ${color}, `\r\n    case \"left\":\r\n      return `-${size}px 0px ${color}, `\r\n    case \"topLeft\":\r\n      return `-${size}px -${size}px ${color}, `\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport default buildString","import React, { useState, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Result from './components/Result'\r\nimport ControlList from './components/ControlList'\r\nimport Footer from './components/Footer'\r\nimport { randomSize } from './utilities/random-shadow'\r\nimport buildString from './utilities/build-string'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState('')\r\n  /* \r\n    spreading the initialShadow into initial state allows us to clone and not mutate\r\n    id temporary and not guaranteed to generate a unique id\r\n    required for unchanging key in mapped controls\r\n  */\r\n  const initialShadow = [\r\n    {\r\n      id: Math.floor(Math.random() * Date.now()),\r\n      size: randomSize(5, 25),\r\n      color: '#6C92FF'\r\n    },\r\n    {\r\n      id: Math.floor(Math.random() * Date.now()),\r\n      size: randomSize(10, 25),\r\n      color: '#5b4cbc'\r\n    },\r\n  ]\r\n\r\n  const [controls, setControls] = useState([ ...initialShadow ])\r\n  const [direction, setDirection] = useState('bottomRight')\r\n\r\n  useEffect(() => {\r\n    const result = buildString(controls, direction)\r\n    setResult(result)\r\n  }, [controls, direction])\r\n\r\n  return (\r\n      <div className='App'>\r\n        <Header />\r\n        <main>\r\n          <Result\r\n            result={result}\r\n          />\r\n          <ControlList\r\n            initialShadow={initialShadow} \r\n            controls={controls}\r\n            setControls={setControls}\r\n            direction={direction}\r\n            setDirection={setDirection}\r\n          />\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}